/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package per.demo;

import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.FileSystem;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public final class FileSystemFactory {

    public static final String URI_SCHEME = "kekfs";

    private FileSystemFactory() {
    }

    public static FileSystem newFileSystem() throws URISyntaxException, IOException {
        URI uri = new URI(URI_SCHEME, newRandomFileSystemName(), null, null);
        Configuration config = Configuration.basic();

        return newFileSystem(InFileFileSystemProvider.instance(), uri, config);
    }

    private static InFileFileSystem newFileSystem(
            InFileFileSystemProvider provider,
            URI uri,
            Configuration config
    ) throws IOException {
        PathService pathService = new PathService();
        FileSystemState state = new FileSystemState();

        InFileFileStore fileStore = createFileStore(config, pathService, state);
        FileSystemView defaultView = createDefaultView(config, fileStore, pathService);

        InFileFileSystem fileSystem =
                new InFileFileSystem(provider, uri, fileStore, pathService, defaultView);

        pathService.setFileSystem(fileSystem);
        return fileSystem;
    }

    private static String newRandomFileSystemName() {
        return UUID.randomUUID().toString();
    }

    private static InFileFileStore createFileStore(
            Configuration config, PathService pathService, FileSystemState state) {
        return new InFileFileStore();
    }

    /**
     * Creates the default view of the file system using the given working directory.
     */
    private static FileSystemView createDefaultView(
            Configuration config, InFileFileStore fileStore, PathService pathService) throws IOException {
        return new FileSystemView(fileStore, new Directory(), new InFilePath());
    }
}
